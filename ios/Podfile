platform :ios, '13.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist."
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks! :linkage => :static  # MODIFICATO: Static frameworks per Xcode 15
  use_modular_headers!
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Configurazione specifica per Xcode 15
    target.build_configurations.each do |config|
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'NO'  # MODIFICATO: NO per Xcode 15
      config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      
      # Generazione manuale Info.plist
      if target.name == 'webview_flutter_wkwebview'
        support_dir = "#{PODS_ROOT}/Target Support Files/webview_flutter_wkwebview"
        plist_path = "#{support_dir}/Info.plist"
        system("mkdir -p \"#{support_dir}\"")
        unless File.exist?(plist_path)
          File.write(plist_path, '<?xml version="1.0"><dict></dict></plist>')
        end
        config.build_settings['INFOPLIST_FILE'] = plist_path
      end
    end
  end
end
